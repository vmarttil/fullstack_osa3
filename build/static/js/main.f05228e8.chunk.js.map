{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","request","delete","console","log","Filter","props","value","string","onChange","handler","PersonForm","onSubmit","submitter","nameValue","nameHandler","numberValue","numberHandler","type","Persons","persons","map","person","key","name","deleteButtonHandler","Person","number","DeleteButton","onClick","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterString","setFilterString","setMessage","messageType","setMessageType","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","personObject","some","p","window","confirm","find","returnedPerson","setTimeout","concat","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f05228e8.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  console.log(request.then(response => response.data))\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, del }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Filter = (props) => {\n  return (\n    <p>filter shown with  <input \n                  value={props.string}\n                  onChange={props.handler} />\n    </p>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.submitter}>\n        <div>\n          name: <input \n                  value={props.nameValue}\n                  onChange={props.nameHandler} />\n        </div>\n        <div>\n          number: <input \n                  value={props.numberValue}\n                  onChange={props.numberHandler} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Persons = (props) => {\n  return (\n    <div>\n      {props.persons.map(person => <Person key={person.name} person={person} deleteButtonHandler={props.deleteButtonHandler} />)}\n    </div>\n  )\n}\n\nconst Person = (props) => {\n  return (\n    <>\n    {props.person.name} {props.person.number} <DeleteButton key={props.person.name} id={props.person.id} deleteButtonHandler={props.deleteButtonHandler} /><br />\n    </>\n  )\n}\n\nconst DeleteButton = (props) => {\n  return (\n    <button id={props.id} onClick={props.deleteButtonHandler}>delete</button>\n  )\n}\n\nconst Notification = (props) => {\n  \n  if (props.message === null) {\n    return null\n  } else {\n    return (\n    <div className={props.type}>\n        {props.message}\n      </div>\n    )\n  }\n}\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterString, setFilterString ] = useState('')\n  const [ message, setMessage ] = useState('')\n  const [ messageType, setMessageType ] = useState('')\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n    }, [])\n\n  const handleFilterString = (event) => {\n    setFilterString(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleDeleteButton = (event) => {\n    const name = persons.find(person => Number(person.id) === Number(event.target.id)).name\n    if (window.confirm(`Delete ${name}?`)) {\n      personService.del(event.target.id)\n      setPersons(persons.filter(person => person.id !== event.target.id))\n    }\n  }\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filterString.toLowerCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.some(p => p.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const id = persons.find(person => person.name === newName).id\n        personService\n          .update(id, personObject)\n          .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n        })\n        setMessageType('add')\n        setMessage(`Updated ${newName}`)\n        setTimeout(() => {setMessage(null)}, 5000)\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n      })\n      setMessageType('add')\n      setMessage(`Added ${newName}`)\n      setTimeout(() => {setMessage(null)}, 5000)\n    }\n  }\n\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} type={messageType} />\n\n      <Filter string={filterString} handler={handleFilterString} />\n      \n      <h2>Add a new</h2>\n      \n      <PersonForm submitter={addPerson}\n                  nameValue={newName}\n                  nameHandler={handleNameChange}\n                  numberValue={newNumber}\n                  numberHandler={handleNumberChange} />\n      \n      <h2>Numbers</h2>\n        \n      <Persons persons={personsToShow} deleteButtonHandler={handleDeleteButton} />\n\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}